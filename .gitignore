################################################################################
# This .gitignore file was automatically created by Microsoft(R) Visual Studio.
################################################################################

/Microsoft.CommonDataModel/Tools/Microsoft.CommonDataModel.Tools.Processor/bin/Debug/netcoreapp2.0/allResolved.txt

.vscode

# User-specific files
*.rsuser
*.suo
*.enduser
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
//DISABLE PATH EDITIONING SYSTEM CONF CONSOLE MANAGE
//DHCP SHARE PORT ENABLE ENDUSER
// ADMINISTROTIONAL USER RIGHTS AUDIT PREFERENCES
// PARTITIONAL PRIMARY LABEL
// START SERVER UDP PORT ENABLE
// REPORT .LOG ERROR CONSOLE ENABLE
// SAFE PROFILE ENDUSER RIGHTS AND SHARE ACTIVE DIRECTORY
// LICENSE AGREEMENT CREDENTIALS
// IDUSER SERIAL NUMBER
// PATH ENABLE
// START SERVER SCENARIOUS .JS JAVA
// GET CONSOLE: 1
//
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# JUnit
junit/

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/
# ASP.NET Core default setup: bower directory is configured as wwwroot/lib/ and bower restore is true
**/wwwroot/lib/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database 
healthchecksdb

**/.vs/
**/bin/
**/obj/

# Ignore files created to debug tests
**/TestData/**/ActualOutput

# Mac stuff
.DS_Store


## PYTHON

# Byte-compiled / optimized / DLL files
objectModel/Python/__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
objectModel/Python/.Python
objectModel/Python/build/
objectModel/Python/develop-eggs/
objectModel/Python/dist/
objectModel/Python/downloads/
objectModel/Python/eggs/
objectModel/Python/.eggs/
objectModel/Python/lib/
objectModel/Python/lib64/
objectModel/Python/parts/
objectModel/Python/sdist/
objectModel/Python/var/
objectModel/Python/wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
objectModel/Python/pip-log.txt
objectModel/Python/pip-delete-this-directory.txt

# Unit test / coverage reports
objectModel/Python/htmlcov/
objectModel/Python/.tox/
objectModel/Python/.coverage
objectModel/Python/.coverage.*
objectModel/Python/.cache
objectModel/Python/nosetests.xml
objectModel/Python/coverage.xml
*.cover
objectModel/Python/.hypothesis/
objectModel/Python/.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
objectModel/Python/local_settings.py
objectModel/Python/db.sqlite3

# Flask stuff:
objectModel/Python/instance/
objectModel/Python/.webassets-cache

# Scrapy stuff:
objectModel/Python/.scrapy

# Sphinx documentation
objectModel/Python/docs/_build/

# PyBuilder
objectModel/Python/target/

# Jupyter Notebook
objectModel/Python/.ipynb_checkpoints

# pyenv
objectModel/Python/.python-version

# celery beat schedule file
objectModel/Python/celerybeat-schedule

# SageMath parsed files
*.sage.py

# VS Code
objectModel/Python/.vscode

# Environments
objectModel/Python/.env
objectModel/Python/.venv
objectModel/Python/env*/
objectModel/Python/venv/
objectModel/Python/ENV/
objectModel/Python/env.bak/
objectModel/Python/venv.bak/

# Spyder project settings
objectModel/Python/.spyderproject
objectModel/Python/.spyproject

# Rope project settings
objectModel/Python/.ropeproject

# mkdocs documentation
objectModel/Python/site

# mypy
objectModel/Python/.mypy_cache/

# User-specific files
objectModel/Python/*.suo

# Visual Studio cache/options directory
objectModel/Python/.vs/

# Test output dirs
**/test_output

# Mac stuff
objectModel/Python/.DS_Store

# resources
objectModel/Python/resources



## JAVA

# Ignore IntelliJ IDE files.
objectModel/Java/.idea
*.iml

# Ignore VSCode files
objectModel/Java/.vscode
objectModel/Java/.settings
objectModel/Java/.classpath
objectModel/Java/.project
*.code-workspace

# Ignore target build artifacts.
objectModel/Java/target
**/.flattened-pom.xml

# Ignore bins
objectModel/Java/bin

# Ignore test generated output files.
objectModel/Java/src/test/java/com/microsoft/commondatamodel/objectmodel/modeljson/out.*
objectModel/Java/src/test/java/com/microsoft/commondatamodel/objectmodel/persistence/cdmfolder/out.*
objectModel/Java/src/test/java/com/microsoft/commondatamodel/objectmodel/testdata/**/ActualOutput

# Mac stuff
objectModel/Java/.DS_Store

## TS

# VS Code
objectModel/TypeScript/.vs
objectModel/TypeScript/.vscode

# Logs
objectModel/TypeScript/logs
*.log
objectModel/TypeScript/npm-debug.log*
objectModel/TypeScript/yarn-debug.log*
objectModel/TypeScript/yarn-error.log*

# Runtime data
objectModel/TypeScript/pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
objectModel/TypeScript/lib-cov

# Coverage directory used by tools like istanbul
objectModel/TypeScript/coverage

# nyc test coverage
objectModel/TypeScript/.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
objectModel/TypeScript/.grunt

# Bower dependency directory (https://bower.io/)
objectModel/TypeScript/bower_components

# node-waf configuration
objectModel/TypeScript/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
objectModel/TypeScript/build/Release

# Dependency directories
objectModel/TypeScript/node_modules/
objectModel/TypeScript/jspm_packages/

# TypeScript v1 declaration files
objectModel/TypeScript/typings/

# Optional npm cache directory
objectModel/TypeScript/.npm

# Optional eslint cache
objectModel/TypeScript/.eslintcache

# Optional REPL history
objectModel/TypeScript/.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
objectModel/TypeScript/.yarn-integrity

# dotenv environment variables file
objectModel/TypeScript/.env

# next.js build output
objectModel/TypeScript/.next

# ignore the tsc output
*.js
*.js.map
*.d.ts

# Ignore files created to debug tests
objectModel/TypeScript/__test__/TestData/**/ActualOutput

# Resources
/objectModel/TypeScript/Resources

## SAMPLES

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Sample output
/samples/SDK-examples/2-create-manifest/*
!/samples/SDK-examples/2-create-manifest/code-cs/*
!/samples/SDK-examples/2-create-manifest/code-java/*
!/samples/SDK-examples/2-create-manifest/code-python/*
!/samples/SDK-examples/2-create-manifest/README.md
/samples/SDK-examples/3-customize-entities/model.json
/samples/SDK-examples/3-customize-entities/config.json
/samples/SDK-examples/3-customize-entities/default-resolved.manifest.cdm.json
/samples/SDK-examples/3-customize-entities/LocalMobileCareTeam.cdm.json
/samples/SDK-examples/3-customize-entities/MobileCareTeam.cdm.json
/samples/SDK-examples/6-create-net-new-entities/CustomAccount.cdm.json
/samples/SDK-examples/6-create-net-new-entities/CustomPerson.cdm.json
/samples/SDK-examples/6-create-net-new-entities/ExtendedStandardAccount.cdm.json
/samples/SDK-examples/6-create-net-new-entities/resolved/*
/samples/SDK-examples/6-create-net-new-entities/default.manifest.cdm.json
/samples/SDK-examples/6-create-net-new-entities/model.json
/samples/SDK-examples/6-create-net-new-entities/config.json
/samples/SDK-examples/7-search-partition-pattern/resolved/*
/samples/SDK-examples/7-search-partition-pattern/default.manifest.cdm.json
/samples/SDK-examples/7-search-partition-pattern/config.json
/samples/SDK-examples/7-search-partition-pattern/model.json

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# next.js build output
.next

# vs goo
samples/SDK-examples/**/code-cs/.vs/*
samples/SDK-examples/**/code-cs/**/bin/*
samples/SDK-examples/**/code-cs/**/obj/*
samples/SDK-examples/sdk-libraries/cs/*
samples/.vs
samples/.vscode

# Byte-compiled / optimized / DLL files
samples/__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Environments
.env
.venv
env*/
venv/
ENV/
env.bak/
venv.bak/

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/

# Java
out/
target

# IntelliJ
.idea/
*.iml

