# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .md_entity_properties import MDEntityProperties


class PartitionInfoProperties(MDEntityProperties):
    """Database properties.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param origin_object_id: Entity object id maintained by the caller.
    :type origin_object_id: str
    :ivar object_id: Entity object id maintained by SyMS.
    :vartype object_id: str
    :ivar object_version: Entity object version maintained by SyMS.
    :vartype object_version: long
    :param publish_status: Possible values include: 'PUBLISHED'
    :type publish_status: str or :class:`PublishStatus
     <Microsoft.ADF.SyMSAPIClient.models.PublishStatus>`
    :param properties: Property bag
    :type properties: dict
    :param namespace:
    :type namespace: :class:`PartitionInfoNamespace
     <Microsoft.ADF.SyMSAPIClient.models.PartitionInfoNamespace>`
    :param storage_descriptor:
    :type storage_descriptor: :class:`StorageDescriptor
     <Microsoft.ADF.SyMSAPIClient.models.StorageDescriptor>`
    :param partition_key_values: Partition key values.
    :type partition_key_values: list of object
    """ 

    _validation = {
        'object_id': {'readonly': True},
        'object_version': {'readonly': True},
        'namespace': {'required': True},
        'storage_descriptor': {'required': True},
        'partition_key_values': {'required': True},
    }

    _attribute_map = {
        'origin_object_id': {'key': 'OriginObjectId', 'type': 'str'},
        'object_id': {'key': 'ObjectId', 'type': 'str'},
        'object_version': {'key': 'ObjectVersion', 'type': 'long'},
        'publish_status': {'key': 'PublishStatus', 'type': 'PublishStatus'},
        'properties': {'key': 'Properties', 'type': '{object}'},
        'namespace': {'key': 'Namespace', 'type': 'PartitionInfoNamespace'},
        'storage_descriptor': {'key': 'StorageDescriptor', 'type': 'StorageDescriptor'},
        'partition_key_values': {'key': 'PartitionKeyValues', 'type': '[object]'},
    }

    def __init__(self, namespace, storage_descriptor, partition_key_values, origin_object_id=None, publish_status=None, properties=None):
        super(PartitionInfoProperties, self).__init__(origin_object_id=origin_object_id, publish_status=publish_status, properties=properties)
        self.namespace = namespace
        self.storage_descriptor = storage_descriptor
        self.partition_key_values = partition_key_values
