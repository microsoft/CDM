// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.CommonDataModel.ObjectModel.Persistence.Syms.Models
{
    using Newtonsoft.Json.Linq;

    /// <summary>
    /// Database properties.
    /// </summary>
    public partial class RelationshipProperties : MDEntityProperties
    {
        /// <summary>
        /// Initializes a new instance of the RelationshipProperties class.
        /// </summary>
        public RelationshipProperties() { }

        /// <summary>
        /// Initializes a new instance of the RelationshipProperties class.
        /// </summary>
        /// <param name="fromTableName">From Table Name</param>
        /// <param name="toTableName">To Table Name</param>
        /// <param name="columnRelationshipInformations">List of Column
        /// Relationships.</param>
        /// <param name="originObjectId">Entity object id maintained by the
        /// caller.</param>
        /// <param name="objectId">Entity object id maintained by SyMS.</param>
        /// <param name="objectVersion">Entity object version maintained by
        /// SyMS.</param>
        /// <param name="publishStatus">Possible values include:
        /// 'PUBLISHED'</param>
        /// <param name="properties">Property bag</param>
        /// <param name="fromTableId">From Table Id</param>
        /// <param name="toTableId">To Table Id</param>
        /// <param name="relationshipType">Possible values include:
        /// 'ONETOONE', 'ONETOMANY', 'MANYTOONE', 'MANYTOMANY'</param>
        public RelationshipProperties(NamespaceModel namespaceProperty, string fromTableName, string toTableName, System.Collections.Generic.IList<ColumnRelationshipInformation> columnRelationshipInformations, string originObjectId = default(string), string objectId = default(string), long? objectVersion = default(long?), PublishStatus? publishStatus = default(PublishStatus?), System.Collections.Generic.IDictionary<string, JToken> properties = default(System.Collections.Generic.IDictionary<string, JToken>), string fromTableId = default(string), string toTableId = default(string), RelationshipType? relationshipType = default(RelationshipType?))
            : base(originObjectId, objectId, objectVersion, publishStatus, properties)
        {
            NamespaceProperty = namespaceProperty;
            FromTableId = fromTableId;
            FromTableName = fromTableName;
            ToTableId = toTableId;
            ToTableName = toTableName;
            RelationshipType = relationshipType;
            ColumnRelationshipInformations = columnRelationshipInformations;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Namespace")]
        public NamespaceModel NamespaceProperty { get; set; }

        /// <summary>
        /// Gets from Table Id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "FromTableId")]
        public string FromTableId { get; private set; }

        /// <summary>
        /// Gets or sets from Table Name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "FromTableName")]
        public string FromTableName { get; set; }

        /// <summary>
        /// Gets to Table Id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ToTableId")]
        public string ToTableId { get; private set; }

        /// <summary>
        /// Gets or sets to Table Name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ToTableName")]
        public string ToTableName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'ONETOONE', 'ONETOMANY',
        /// 'MANYTOONE', 'MANYTOMANY'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "RelationshipType")]
        public RelationshipType? RelationshipType { get; set; }

        /// <summary>
        /// Gets or sets list of Column Relationships.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ColumnRelationshipInformations")]
        public System.Collections.Generic.IList<ColumnRelationshipInformation> ColumnRelationshipInformations { get; set; }
    }
}
