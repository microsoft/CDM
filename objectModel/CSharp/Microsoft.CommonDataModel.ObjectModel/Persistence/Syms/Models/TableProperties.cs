// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.CommonDataModel.ObjectModel.Persistence.Syms.Models
{
    using Newtonsoft.Json.Linq;

    /// <summary>
    /// Database properties.
    /// </summary>
    public partial class TableProperties : MDEntityProperties
    {
        /// <summary>
        /// Initializes a new instance of the TableProperties class.
        /// </summary>
        public TableProperties()
        {
        }

        /// <summary>
        /// Initializes a new instance of the TableProperties class.
        /// </summary>
        /// <param name="tableType">Possible values include: 'MANAGED',
        /// 'EXTERNAL'</param>
        /// <param name="originObjectId">Entity object id maintained by the
        /// caller.</param>
        /// <param name="objectId">Entity object id maintained by SyMS.</param>
        /// <param name="objectVersion">Entity object version maintained by
        /// SyMS.</param>
        /// <param name="publishStatus">Possible values include:
        /// 'PUBLISHED'</param>
        /// <param name="properties">Property bag</param>
        /// <param name="temporary">Temporary.</param>
        /// <param name="isRewriteEnabled">Is rewrite enabled.</param>
        public TableProperties(TableNamespace namespaceProperty, TableType tableType, StorageDescriptor storageDescriptor, string originObjectId = default(string), string objectId = default(string), long? objectVersion = default(long?), PublishStatus? publishStatus = default(PublishStatus?), System.Collections.Generic.IDictionary<string, JToken> properties = default(System.Collections.Generic.IDictionary<string, JToken>), TablePartitioning partitioning = default(TablePartitioning), bool? temporary = default(bool?), bool? isRewriteEnabled = default(bool?))
            : base(originObjectId, objectId, objectVersion, publishStatus, properties)
        {
            NamespaceProperty = namespaceProperty;
            Partitioning = partitioning;
            TableType = tableType;
            StorageDescriptor = storageDescriptor;
            Temporary = temporary;
            IsRewriteEnabled = isRewriteEnabled;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Namespace")]
        public TableNamespace NamespaceProperty { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Partitioning")]
        public TablePartitioning Partitioning { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'MANAGED', 'EXTERNAL'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TableType")]
        public TableType TableType { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "StorageDescriptor")]
        public StorageDescriptor StorageDescriptor { get; set; }

        /// <summary>
        /// Gets or sets temporary.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Temporary")]
        public bool? Temporary { get; set; }

        /// <summary>
        /// Gets or sets is rewrite enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "IsRewriteEnabled")]
        public bool? IsRewriteEnabled { get; set; }

    }
}
