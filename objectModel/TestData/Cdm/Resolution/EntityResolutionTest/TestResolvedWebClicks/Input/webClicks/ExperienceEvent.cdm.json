{
    "$schema": "../schema.cdm.json",
    "jsonSchemaSemanticVersion": "1.0.0",
    "imports": [
        {
            "corpusPath": "_allImports.cdm.json"
        }
    ],
    "definitions": [
        {
            "entityName": "ExperienceEvent",
            "extendsEntity": "CdmObjectBase",
            "exhibitsTraits": [
                {
                    "traitReference": "is.localized.displayedAs",
                    "arguments": [
                        {
                            "entityReference": {
                                "entityShape": "localizedTable",
                                "constantValues": [
                                    [
                                        "en",
                                        "Experience Event"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                {
                    "traitReference": "is.localized.describedAs",
                    "arguments": [
                        {
                            "entityReference": {
                                "entityShape": "localizedTable",
                                "constantValues": [
                                    [
                                        "en",
                                        "The core ExperienceEvent XDM is used to capture observations that are altering one or more related XDMs/entities. The ExperienceEvent captures information about the observation taking place and when it is occurring. It is critical for time domain analytics as it allows observation and analysis of changes that occur in windows of time and comparison with other windows of time to track trends. ExperienceEvent are either explicit or implicit. Explicit events are direct observations of a human action taking place during a session. Implicit events are events that are being raised without a direct human action. Examples of implicit events are scheduled email sending of newsletters, battery voltage reaching a certain threshold, a person entering into range of a proximity sensor. While not all events are easily categorized across all data sources, it is extremely valuable to harmonize similar events into similar types for processing where possible, and the XDM specifications does this by defining a set of enumerated **type** attribute values with specific semantic meanings. Where possible events must be constrained to these enumerated values to facilitate interoperability."
                                    ]
                                ]
                            }
                        }
                    ]
                }
            ],
            "displayName": "Experience Event",
            "description": "The core ExperienceEvent XDM is used to capture observations that are altering one or more related XDMs/entities. The ExperienceEvent captures information about the observation taking place and when it is occurring. It is critical for time domain analytics as it allows observation and analysis of changes that occur in windows of time and comparison with other windows of time to track trends. ExperienceEvent are either explicit or implicit. Explicit events are direct observations of a human action taking place during a session. Implicit events are events that are being raised without a direct human action. Examples of implicit events are scheduled email sending of newsletters, battery voltage reaching a certain threshold, a person entering into range of a proximity sensor. While not all events are easily categorized across all data sources, it is extremely valuable to harmonize similar events into similar types for processing where possible, and the XDM specifications does this by defining a set of enumerated **type** attribute values with specific semantic meanings. Where possible events must be constrained to these enumerated values to facilitate interoperability.",
            "hasAttributes": [
                {
                    "purpose": "identifiedBy",
                    "dataType": "url",
                    "name": "id",
                    "appliedTraits": [
                        {
                            "traitReference": "is.localized.describedAs",
                            "arguments": [
                                {
                                    "entityReference": {
                                        "entityShape": "localizedTable",
                                        "constantValues": [
                                            [
                                                "en",
                                                "The unique identifier for the ExperienceEvent."
                                            ]
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "traitReference": "is.localized.displayedAs",
                            "arguments": [
                                {
                                    "name": "localizedDisplayText",
                                    "value": {
                                        "entityReference": {
                                            "entityShape": "localizedTable",
                                            "constantValues": [
                                                [
                                                    "en",
                                                    "Identifier"
                                                ]
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "description": "The unique identifier for the ExperienceEvent.",
                    "displayName": "Identifier"
                },
                {
                    "purpose": "occuredOn",
                    "dataType": "dateTime",
                    "name": "timestamp",
                    "appliedTraits": [
                        {
                            "traitReference": "is.localized.describedAs",
                            "arguments": [
                                {
                                    "entityReference": {
                                        "entityShape": "localizedTable",
                                        "constantValues": [
                                            [
                                                "en",
                                                "The time when the first event of the interaction occurred."
                                            ]
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "traitReference": "is.localized.displayedAs",
                            "arguments": [
                                {
                                    "name": "localizedDisplayText",
                                    "value": {
                                        "entityReference": {
                                            "entityShape": "localizedTable",
                                            "constantValues": [
                                                [
                                                    "en",
                                                    "Timestamp"
                                                ]
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "description": "The time when the first event of the interaction occurred.",
                    "displayName": "Timestamp"
                },
                {
                    "purpose": "hasA",
                    "dataType": "dateTime",
                    "name": "receivedTimestamp",
                    "appliedTraits": [
                        {
                            "traitReference": "is.localized.describedAs",
                            "arguments": [
                                {
                                    "entityReference": {
                                        "entityShape": "localizedTable",
                                        "constantValues": [
                                            [
                                                "en",
                                                "The time at which this interaction was received by a server."
                                            ]
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "traitReference": "is.localized.displayedAs",
                            "arguments": [
                                {
                                    "name": "localizedDisplayText",
                                    "value": {
                                        "entityReference": {
                                            "entityShape": "localizedTable",
                                            "constantValues": [
                                                [
                                                    "en",
                                                    "Received Timestamp"
                                                ]
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "description": "The time at which this interaction was received by a server.",
                    "displayName": "Received Timestamp"
                },
                {
                    "name": "endUserIds",
                    "entity": {
                        "entityReference": {
                            "entityName": "allIdentity",
                            "hasAttributes": [
                                {
                                    "name": "emailOption",
                                    "entity": {
                                        "entityReference": "EmailAddress",
                                        "appliedTraits": [
                                            {
                                                "traitReference": "is.identifiedBy",
                                                "arguments": [
                                                    "EmailAddress/(resolvedAttributes)/identityId"
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "phoneNumberOption",
                                    "entity": {
                                        "entityReference": "PhoneNumber",
                                        "appliedTraits": [
                                            {
                                                "traitReference": "is.identifiedBy",
                                                "arguments": [
                                                    "PhoneNumber/(resolvedAttributes)/identityId"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "resolutionGuidance": {
                        "cardinality": "many",
                        "renameFormat": "endUserIds{o}_{a}",
                        "expansion": {
                            "startingOrdinal": 0,
                            "maximumExpansion": 6,
                            "countAttribute": {
                                "purpose": "hasA",
                                "dataType": "integer",
                                "name": "count"
                            }
                        },
                        "entityByReference": {
                            "allowReference": true,
                            "alwaysIncludeForeignKey": false,
                            "referenceOnlyAfterDepth": 2,
                            "foreignKeyAttribute": {
                                "purpose": "hasA",
                                "dataType": "string",
                                "name": "identityId"
                            }
                        },
                        "selectsSubAttribute": {
                            "selects": "one",
                            "selectedTypeAttribute": {
                                "dataType": "entityName",
                                "name": "idType",
                                "appliedTraits": [
                                    "is.linkedEntity.name"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "device",
                    "entity": {
                        "entityReference": "Device",
                        "appliedTraits": [
                            {
                                "traitReference": "is.identifiedBy",
                                "arguments": [
                                    "Device/(resolvedAttributes)/typeID"
                                ]
                            }
                        ]
                    },
                    "resolutionGuidance": {
                        "cardinality": "one",
                        "renameFormat": "{a}_{m}",
                        "entityByReference": {
                            "allowReference": true,
                            "alwaysIncludeForeignKey": false,
                            "referenceOnlyAfterDepth": 2,
                            "foreignKeyAttribute": {
                                "dataType": "entityId",
                                "name": "foreignKey",
                                "appliedTraits": [
                                    "is.linkedEntity.identifier"
                                ]
                            }
                        },
                        "selectsSubAttribute": {
                            "selects": "all"
                        }
                    }
                },
                {
                    "name": "web",
                    "entity": {
                        "entityReference": "WebInfo",
                        "appliedTraits": [
                            {
                                "traitReference": "is.identifiedBy",
                                "arguments": [
                                    "WebInfo/(resolvedAttributes)/webInfoId"
                                ]
                            }
                        ]
                    },
                    "resolutionGuidance": {
                        "cardinality": "one",
                        "renameFormat": "{a}_{m}",
                        "entityByReference": {
                            "allowReference": true,
                            "alwaysIncludeForeignKey": false,
                            "referenceOnlyAfterDepth": 2,
                            "foreignKeyAttribute": {
                                "dataType": "entityId",
                                "name": "foreignKey",
                                "appliedTraits": [
                                    "is.linkedEntity.identifier"
                                ]
                            }
                        },
                        "selectsSubAttribute": {
                            "selects": "all"
                        }
                    }
                }
            ]
        }
    ]
}