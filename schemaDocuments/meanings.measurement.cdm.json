{
  "documentVersion": "1.3.1",
  "$schema": "./schema.cdm.json",
  "jsonSchemaSemanticVersion": "1.0.0",
  "explanation": "Measurement of quantities",
  "imports": [
    {
      "corpusPath": "/primitives.cdm.json"
    }
  ],
  "definitions": [
    {
      "traitName": "means.measurement",
      "extendsTrait": "means"
    },
    {
      "traitName": "means.measurement.dimension",
      "explanation": "measurement of some physical dimension",
      "extendsTrait": "means.measurement",
      "hasParameters": [
        {
          "name": "dimension",
          "explanation": "the name of the physical dimension being measured",
          "dataType": "string"
        }
      ]
    },
    {
      "traitName": "means.measurement.dimension.time",
      "explanation": "measurement of time",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "time"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.length",
      "explanation": "measurement of length",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "length"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.mass",
      "explanation": "measurement of mass",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "mass"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.electricCurrent",
      "explanation": "measurement of electric current",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "electricCurrent"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.temperature",
      "explanation": "measurement of thermodynamic temperature",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "temperature"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.amount",
      "explanation": "measurement of amount of substance",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "amount"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.luminousIntensity",
      "explanation": "measurement of electric current",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "luminousIntensity"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.frequency",
      "explanation": "measurement of frequency",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "frequency"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.angle",
      "explanation": "measurement of geometric angle",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "angle"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.force",
      "explanation": "measurement of force",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "force"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.pressure",
      "explanation": "measurement of pressure or stress",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "pressure"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.energy",
      "explanation": "measurement of energy, work, heat",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "energy"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.power",
      "explanation": "measurement of power, radiant flex",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "power"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.electricCharge",
      "explanation": "measurement of electric charge, quantity of electricity",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "electricCharge"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.electromotiveForce",
      "explanation": "measurement of volatage, EMF, electrical potential difference",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "electromotiveForce"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.capacitance",
      "explanation": "measurement of electrical capacitance",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "capacitance"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.resistance",
      "explanation": "measurement of electrical resistance, impedance, reactance",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "resistance"
        ]
      }
    },
    {
      "traitName": "means.measurement.dimension.dataRate",
      "explanation": "measurement of data rate",
      "extendsTrait": {
        "traitReference": "means.measurement.dimension",
        "arguments": [
          "dataRate"
        ]
      }
    },
    {
      "traitName": "has.measurement.fundamentalComponent",
      "explanation": "description of one fundamental component of a derived unit",
      "extendsTrait": "means.measurement",
      "hasParameters": [
        {
          "name": "fundamentalUnit",
          "explanation": "the name of the fundamental unit that is a component of some derived unit.",
          "dataType": "string"
        },
        {
          "name": "symbol",
          "explanation": "the common symbolic representation of the unit",
          "dataType": "string"
        },
        {
          "name": "dimension",
          "explanation": "dimension being measured",
          "dataType": "string"
        },
        {
          "name": "fundamentalExponent",
          "explanation": "the exponent, positive, negative, fractional (for inverse) that the component contributes to the base derived unit.",
          "dataType": "double",
          "defaultValue": "1"
        },
        {
          "name": "fundamentalScale",
          "explanation": "the constant scale factor applied to the fundamental unit (prior to application of exponent) by the derived unit",
          "dataType": "double",
          "defaultValue": "1"
        },
        {
          "name": "fundamentalOffset",
          "explanation": "the constant offset applied to the scaled fundamental unit (prior to application of exponent) by the derived unit",
          "dataType": "double",
          "defaultValue": "0"
        }
      ]
    },
    {
      "traitName": "has.measurement.fundamentalComponent.second",
      "explanation": "a fundamental component expressing time in seconds",
      "extendsTrait": {
        "traitReference": "has.measurement.fundamentalComponent",
        "arguments": [
          {
            "name": "fundamentalUnit",
            "value": "second"
          },
          {
            "name": "dimension",
            "value": "time"
          },
          {
            "name": "symbol",
            "value": "s"
          }
        ]
      }
    },
    {
      "traitName": "has.measurement.fundamentalComponent.meter",
      "explanation": "a fundamental component expressing length in meters",
      "extendsTrait": {
        "traitReference": "has.measurement.fundamentalComponent",
        "arguments": [
          {
            "name": "fundamentalUnit",
            "value": "meter"
          },
          {
            "name": "dimension",
            "value": "length"
          },
          {
            "name": "symbol",
            "value": "m"
          }
        ]
      }
    },
    {
      "traitName": "has.measurement.fundamentalComponent.kilogram",
      "explanation": "a fundamental component expressing mass in kilogram",
      "extendsTrait": {
        "traitReference": "has.measurement.fundamentalComponent",
        "arguments": [
          {
            "name": "fundamentalUnit",
            "value": "kilogram"
          },
          {
            "name": "dimension",
            "value": "mass"
          },
          {
            "name": "symbol",
            "value": "kg"
          }
        ]
      }
    },
    {
      "traitName": "has.measurement.fundamentalComponent.ampere",
      "explanation": "a fundamental component expressing electric current in amperes",
      "extendsTrait": {
        "traitReference": "has.measurement.fundamentalComponent",
        "arguments": [
          {
            "name": "fundamentalUnit",
            "value": "ampere"
          },
          {
            "name": "dimension",
            "value": "electricCurrent"
          },
          {
            "name": "symbol",
            "value": "A"
          }
        ]
      }
    },
    {
      "traitName": "has.measurement.fundamentalComponent.kelvin",
      "explanation": "a fundamental component expressing thermodynamic temperature in degrees kelvin",
      "extendsTrait": {
        "traitReference": "has.measurement.fundamentalComponent",
        "arguments": [
          {
            "name": "fundamentalUnit",
            "value": "kelvin"
          },
          {
            "name": "dimension",
            "value": "temperature"
          },
          {
            "name": "symbol",
            "value": "K"
          }
        ]
      }
    },
    {
      "traitName": "has.measurement.fundamentalComponent.mole",
      "explanation": "a fundamental component expressing amount in moles",
      "extendsTrait": {
        "traitReference": "has.measurement.fundamentalComponent",
        "arguments": [
          {
            "name": "fundamentalUnit",
            "value": "mole"
          },
          {
            "name": "dimension",
            "value": "amount"
          },
          {
            "name": "symbol",
            "value": "mol"
          }
        ]
      }
    },
    {
      "traitName": "has.measurement.fundamentalComponent.candela",
      "explanation": "a fundamental component expressing luminous intensity in candelas",
      "extendsTrait": {
        "traitReference": "has.measurement.fundamentalComponent",
        "arguments": [
          {
            "name": "fundamentalUnit",
            "value": "candela"
          },
          {
            "name": "dimension",
            "value": "luminousIntensity"
          },
          {
            "name": "symbol",
            "value": "cd"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si",
      "explanation": "measurments in international system of units",
      "extendsTrait": "means",
      "hasParameters": [
        {
          "name": "unit",
          "explanation": "unit of measurement",
          "dataType": "string"
        },
        {
          "name": "dimension",
          "explanation": "dimension being measured",
          "dataType": "string"
        },
        {
          "name": "symbol",
          "explanation": "the common symbolic representation of the unit",
          "dataType": "string"
        }
      ]
    },
    {
      "traitName": "means.measurement.units.si.second",
      "explanation": "measurement of time in seconds",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "second"
          },
          {
            "name": "dimension",
            "value": "time"
          },
          {
            "name": "symbol",
            "value": "s"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.meter",
      "explanation": "measurement of length in meters",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "meter"
          },
          {
            "name": "dimension",
            "value": "length"
          },
          {
            "name": "symbol",
            "value": "m"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.kilogram",
      "explanation": "measurement of mass in kilogram",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "kilogram"
          },
          {
            "name": "dimension",
            "value": "mass"
          },
          {
            "name": "symbol",
            "value": "kg"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.ampere",
      "explanation": "measurement of electric current in amperes",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "ampere"
          },
          {
            "name": "dimension",
            "value": "electricCurrent"
          },
          {
            "name": "symbol",
            "value": "A"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.kelvin",
      "explanation": "measurement of thermodynamic temperature in degrees kelvin",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "kelvin"
          },
          {
            "name": "dimension",
            "value": "temperature"
          },
          {
            "name": "symbol",
            "value": "K"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.mole",
      "explanation": "measurement of amount in moles",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "mole"
          },
          {
            "name": "dimension",
            "value": "amount"
          },
          {
            "name": "symbol",
            "value": "mol"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.candela",
      "explanation": "measurement of luminous intensity in candelas",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "candela"
          },
          {
            "name": "dimension",
            "value": "luminousIntensity"
          },
          {
            "name": "symbol",
            "value": "cd"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.hertz",
      "explanation": "measurement of frequency in hertz",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "hertz"
          },
          {
            "name": "dimension",
            "value": "frequency"
          },
          {
            "name": "symbol",
            "value": "Hz"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.radian",
      "explanation": "measurement of angle in radians",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "radian"
          },
          {
            "name": "dimension",
            "value": "angle"
          },
          {
            "name": "symbol",
            "value": "rad"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.newton",
      "explanation": "measurement of force or weight in newtons",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "newton"
          },
          {
            "name": "dimension",
            "value": "force"
          },
          {
            "name": "symbol",
            "value": "N"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.pascal",
      "explanation": "measurement of pressure or stress in pascals",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "pascal"
          },
          {
            "name": "dimension",
            "value": "pressure"
          },
          {
            "name": "symbol",
            "value": "Pa"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.joule",
      "explanation": "measurement of energy, work or heat in joules",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "joule"
          },
          {
            "name": "dimension",
            "value": "energy"
          },
          {
            "name": "symbol",
            "value": "J"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.watt",
      "explanation": "measurement of power or radiant flux in watts",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "watt"
          },
          {
            "name": "dimension",
            "value": "power"
          },
          {
            "name": "symbol",
            "value": "W"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.coulomb",
      "explanation": "measurement of electric charge or amount of electricity in coulombs",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "coulomb"
          },
          {
            "name": "dimension",
            "value": "electricCharge"
          },
          {
            "name": "symbol",
            "value": "C"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.volt",
      "explanation": "measurement of voltage, EMF, electrical potantial difference in volts",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "volt"
          },
          {
            "name": "dimension",
            "value": "electromotiveForce"
          },
          {
            "name": "symbol",
            "value": "V"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.farad",
      "explanation": "measurement of electric capacitance in farads",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "farad"
          },
          {
            "name": "dimension",
            "value": "capacitance"
          },
          {
            "name": "symbol",
            "value": "F"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.ohm",
      "explanation": "measurement of electrical resistance, impedance, reactance in ohms",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "ohm"
          },
          {
            "name": "dimension",
            "value": "resistance"
          },
          {
            "name": "symbol",
            "value": "Ω"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.celsius",
      "explanation": "measurement of temperature in degrees celsius",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "celsius"
          },
          {
            "name": "dimension",
            "value": "temperature"
          },
          {
            "name": "symbol",
            "value": "C"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.gram",
      "explanation": "measurement of mass in grams",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "gram"
          },
          {
            "name": "dimension",
            "value": "mass"
          },
          {
            "name": "symbol",
            "value": "g"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.units.si.bitPerSecond",
      "explanation": "measurement of data rate in bits per second",
      "extendsTrait": {
        "traitReference": "means.measurement.units.si",
        "arguments": [
          {
            "name": "unit",
            "value": "bitPerSecond"
          },
          {
            "name": "dimension",
            "value": "dataRate"
          },
          {
            "name": "symbol",
            "value": "bps"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.prefix",
      "extendsTrait": "means.measurement",
      "explanation": "unit prefixes denoting a factor of one thousandth",
      "hasParameters": [
        {
          "name": "scaleExponent",
          "explanation": "measurement scale expressed as the exponent for powers of 10",
          "dataType": "double",
          "defaultValue": "0"
        }
      ]
    },
    {
      "traitName": "means.measurement.prefix.giga",
      "explanation": "denotes one thousanth of the unit; 10E9",
      "extendsTrait": {
        "traitReference": "means.measurement.prefix",
        "arguments": [
          {
            "name": "scaleExponent",
            "value": "9"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.prefix.mega",
      "explanation": "denotes one thousanth of the unit; 10E6",
      "extendsTrait": {
        "traitReference": "means.measurement.prefix",
        "arguments": [
          {
            "name": "scaleExponent",
            "value": "6"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.prefix.kilo",
      "explanation": "denotes one thousanth of the unit; 10E3",
      "extendsTrait": {
        "traitReference": "means.measurement.prefix",
        "arguments": [
          {
            "name": "scaleExponent",
            "value": "3"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.prefix.centi",
      "explanation": "denotes one thousanth of the unit; 10E-2",
      "extendsTrait": {
        "traitReference": "means.measurement.prefix",
        "arguments": [
          {
            "name": "scaleExponent",
            "value": "-2"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.prefix.milli",
      "explanation": "denotes one thousanth of the unit; 10E-3",
      "extendsTrait": {
        "traitReference": "means.measurement.prefix",
        "arguments": [
          {
            "name": "scaleExponent",
            "value": "-3"
          }
        ]
      }
    },
    {
      "traitName": "means.measurement.prefix.micro",
      "explanation": "denotes one thousanth of the unit; 10E-6",
      "extendsTrait": {
        "traitReference": "means.measurement.prefix",
        "arguments": [
          "-6"
        ]
      }
    },
    {
      "traitName": "means.measurement.prefix.nano",
      "explanation": "denotes one thousanth of the unit; 10E-9",
      "extendsTrait": {
        "traitReference": "means.measurement.prefix",
        "arguments": [
          "-9"
        ]
      }
    },
    {
      "traitName": "means.measurement.prefix.pico",
      "explanation": "denotes one thousanth of the unit; 10E-12",
      "extendsTrait": {
        "traitReference": "means.measurement.prefix",
        "arguments": [
          "-12"
        ]
      }
    },
    {
      "dataTypeName": "second",
      "explanation": "unit of measure for time in seconds",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.time",
        "means.measurement.units.si.second",
        "has.measurement.fundamentalComponent.second",
        "means.measurement.duration.seconds"
      ]
    },
    {
      "dataTypeName": "meter",
      "explanation": "unit of measure for length in meters",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.length",
        "means.measurement.units.si.meter",
        "has.measurement.fundamentalComponent.meter"
      ]
    },
    {
      "dataTypeName": "kilogram",
      "explanation": "unit of measure for mass in kilogram",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.mass",
        "means.measurement.units.si.kilogram",
        "has.measurement.fundamentalComponent.kilogram"
      ]
    },
    {
      "dataTypeName": "ampere",
      "explanation": "unit of measure for electric current in amperes",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.electricCurrent",
        "means.measurement.units.si.ampere",
        "has.measurement.fundamentalComponent.ampere"
      ]
    },
    {
      "dataTypeName": "kelvin",
      "explanation": "unit of measure for thermodynamic temperature in degrees kelvin",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.temperature",
        "means.measurement.units.si.kelvin",
        "has.measurement.fundamentalComponent.kelvin"
      ]
    },
    {
      "dataTypeName": "mole",
      "explanation": "unit of measure for amount in moles",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.amount",
        "means.measurement.units.si.mole",
        "has.measurement.fundamentalComponent.mole"
      ]
    },
    {
      "dataTypeName": "candela",
      "explanation": "unit of measure for luminous intensity in candelas",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.luminousIntensity",
        "means.measurement.units.si.candela",
        "has.measurement.fundamentalComponent.candela"
      ]
    },
    {
      "dataTypeName": "hertz",
      "explanation": "unit of measure for frequency in hertz",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.frequency",
        "means.measurement.units.si.hertz",
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-1"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "radian",
      "explanation": "unit of measure for angle in radians",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.angle",
        "means.measurement.units.si.radian",
        {
          "traitReference": "has.measurement.fundamentalComponent",
          "arguments": [
            {
              "name": "fundamentalUnit",
              "value": "radian"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "newton",
      "explanation": "unit of measure for force or weight in newtons",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.force",
        "means.measurement.units.si.newton",
        "has.measurement.fundamentalComponent.kilogram",
        "has.measurement.fundamentalComponent.meter",
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-2"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "pascal",
      "explanation": "unit of measure for pressure or stress in pascals",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.pressure",
        "means.measurement.units.si.pascal",
        "has.measurement.fundamentalComponent.kilogram",
        {
          "traitReference": "has.measurement.fundamentalComponent.meter",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-1"
            }
          ]
        },
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-2"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "joule",
      "explanation": "unit of measure for energy, work or heat in joules",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.energy",
        "means.measurement.units.si.joule",
        "has.measurement.fundamentalComponent.kilogram",
        {
          "traitReference": "has.measurement.fundamentalComponent.meter",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "2"
            }
          ]
        },
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-2"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "watt",
      "explanation": "unit of measure for power or radiant flux in watts",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.power",
        "means.measurement.units.si.watt",
        "has.measurement.fundamentalComponent.kilogram",
        {
          "traitReference": "has.measurement.fundamentalComponent.meter",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "2"
            }
          ]
        },
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-3"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "coulomb",
      "explanation": "unit of measure for electric charge or amount of electricity in coulombs",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.electricCharge",
        "means.measurement.units.si.coulomb",
        "has.measurement.fundamentalComponent.second",
        "has.measurement.fundamentalComponent.ampere"
      ]
    },
    {
      "dataTypeName": "volt",
      "explanation": "unit of measure for voltage, EMF, electrical potantial difference in volts",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.electromotiveForce",
        "means.measurement.units.si.volt",
        "has.measurement.fundamentalComponent.kilogram",
        {
          "traitReference": "has.measurement.fundamentalComponent.meter",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "2"
            }
          ]
        },
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-3"
            }
          ]
        },
        {
          "traitReference": "has.measurement.fundamentalComponent.ampere",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-1"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "farad",
      "explanation": "unit of measure for electric capacitance in farads",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.capacitance",
        "means.measurement.units.si.farad",
        {
          "traitReference": "has.measurement.fundamentalComponent.kilogram",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-1"
            }
          ]
        },
        {
          "traitReference": "has.measurement.fundamentalComponent.meter",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-2"
            }
          ]
        },
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "4"
            }
          ]
        },
        {
          "traitReference": "has.measurement.fundamentalComponent.ampere",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "2"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "ohm",
      "explanation": "unit of measure for electrical resistance, impedance, reactance in ohms",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.resistance",
        "means.measurement.units.si.ohm",
        "has.measurement.fundamentalComponent.kilogram",
        {
          "traitReference": "has.measurement.fundamentalComponent.meter",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "2"
            }
          ]
        },
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-3"
            }
          ]
        },
        {
          "traitReference": "has.measurement.fundamentalComponent.ampere",
          "arguments": [
            {
              "name": "fundamentalExponent",
              "value": "-2"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "microSecond",
      "explanation": "unit of measure for time in 10E-6 seconds",
      "extendsDataType": "second",
      "exhibitsTraits": [
        "means.measurement.prefix.micro"
      ]
    },
    {
      "dataTypeName": "milliSecond",
      "explanation": "unit of measure for time in 10E-3 seconds",
      "extendsDataType": "second",
      "exhibitsTraits": [
        "means.measurement.prefix.milli"
      ]
    },
    {
      "dataTypeName": "minute",
      "explanation": "unit of measure for time in 60 second interval",
      "extendsDataType": "integer",
      "exhibitsTraits": [
        "means.measurement.dimension.time",
        "means.measurement.duration.minutes",
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalScale",
              "value": "60"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "hour",
      "explanation": "unit of measure for time in 3600 second interval",
      "extendsDataType": "integer",
      "exhibitsTraits": [
        "means.measurement.dimension.time",
        "means.measurement.duration.hours",
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalScale",
              "value": "3600"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "day",
      "explanation": "unit of measure for time in 'one earth rotation' interval",
      "extendsDataType": "integer",
      "exhibitsTraits": [
        "means.measurement.dimension.time",
        "means.measurement.duration.days",
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalScale",
              "value": "86400"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "year",
      "explanation": "unit of measure for time in 'one solar orbit' interval",
      "extendsDataType": "integer",
      "exhibitsTraits": [
        "means.measurement.dimension.time",
        "means.measurement.duration.years",
        {
          "traitReference": "has.measurement.fundamentalComponent.second",
          "arguments": [
            {
              "name": "fundamentalScale",
              "value": "31556952"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "millimeter",
      "explanation": "unit of measure for length in 10E-3 meters",
      "extendsDataType": "meter",
      "exhibitsTraits": [
        "means.measurement.prefix.milli"
      ]
    },
    {
      "dataTypeName": "centimeter",
      "explanation": "unit of measure for length in 10E-2 meters",
      "extendsDataType": "meter",
      "exhibitsTraits": [
        "means.measurement.prefix.centi"
      ]
    },
    {
      "dataTypeName": "kilometer",
      "explanation": "unit of measure for length in 10E3 meters",
      "extendsDataType": "meter",
      "exhibitsTraits": [
        "means.measurement.prefix.kilo"
      ]
    },
    {
      "dataTypeName": "gram",
      "explanation": "unit of measure for mass in grams",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.mass",
        "means.measurement.units.si.gram",
        {
          "traitReference": "has.measurement.fundamentalComponent.kilogram",
          "arguments": [
            {
              "name": "fundamentalScale",
              "value": ".001"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "milligram",
      "explanation": "unit of measure for mass in milligrams",
      "extendsDataType": "gram",
      "exhibitsTraits": [
        "means.measurement.prefix.milli"
      ]
    },
    {
      "dataTypeName": "microampere",
      "explanation": "unit of capacitance, equivalent to 10E-6 amperes",
      "extendsDataType": "ampere",
      "exhibitsTraits": [
        "means.measurement.prefix.micro"
      ]
    },
    {
      "dataTypeName": "milliampere",
      "explanation": "unit of capacitance, equivalent to 10E-3 amperes",
      "extendsDataType": "ampere",
      "exhibitsTraits": [
        "means.measurement.prefix.milli"
      ]
    },
    {
      "dataTypeName": "celsius",
      "explanation": "unit of measure for temperature in degrees celsius",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.temperature",
        "means.measurement.units.si.celsius",
        {
          "traitReference": "has.measurement.fundamentalComponent.kelvin",
          "arguments": [
            {
              "name": "fundamentalOffset",
              "value": "273.15"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "kilohertz",
      "explanation": "unit of frequency equivalent to 10E3 hertz",
      "extendsDataType": "hertz",
      "exhibitsTraits": [
        "means.measurement.prefix.kilo"
      ]
    },
    {
      "dataTypeName": "megahertz",
      "explanation": "unit of frequency equivalent to 10E6 hertz",
      "extendsDataType": "hertz",
      "exhibitsTraits": [
        "means.measurement.prefix.mega"
      ]
    },
    {
      "dataTypeName": "gigahertz",
      "explanation": "unit of frequency equivalent to 10E9 hertz",
      "extendsDataType": "hertz",
      "exhibitsTraits": [
        "means.measurement.prefix.giga"
      ]
    },
    {
      "traitName": "means.measurement.units.degree",
      "extendsTrait": "means.measurement"
    },
    {
      "dataTypeName": "degree",
      "explanation": "unit of measure for angles in degrees, 1/360 rotation",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.dimension.angle",
        "means.measurement.units.degree",
        {
          "traitReference": "has.measurement.fundamentalComponent",
          "arguments": [
            {
              "name": "fundamentalUnit",
              "value": "radian"
            },
            {
              "name": "fundamentalScale",
              "value": "0.01745329252"
            }
          ]
        }
      ]
    },
    {
      "dataTypeName": "kilopascal",
      "explanation": "unit of stress, equivalent to 10E3 pascals",
      "extendsDataType": "pascal",
      "exhibitsTraits": [
        "means.measurement.prefix.kilo"
      ]
    },
    {
      "dataTypeName": "megapascal",
      "explanation": "unit of stress, equivalent to 10E6 pascals",
      "extendsDataType": "pascal",
      "exhibitsTraits": [
        "means.measurement.prefix.mega"
      ]
    },
    {
      "dataTypeName": "gigapascal",
      "explanation": "unit of stress, equivalent to 10E9 pascals",
      "extendsDataType": "pascal",
      "exhibitsTraits": [
        "means.measurement.prefix.giga"
      ]
    },
    {
      "dataTypeName": "milliwatt",
      "explanation": "unit of power, equivalent to 10E-3 watts",
      "extendsDataType": "watt",
      "exhibitsTraits": [
        "means.measurement.prefix.milli"
      ]
    },
    {
      "dataTypeName": "kilowatt",
      "explanation": "unit of power, equivalent to 10E3 watts",
      "extendsDataType": "watt",
      "exhibitsTraits": [
        "means.measurement.prefix.kilo"
      ]
    },
    {
      "dataTypeName": "megawatt",
      "explanation": "unit of power, equivalent to 10E6 watts",
      "extendsDataType": "watt",
      "exhibitsTraits": [
        "means.measurement.prefix.mega"
      ]
    },
    {
      "dataTypeName": "millivolt",
      "explanation": "unit of power, equivalent to 10E-3 volts",
      "extendsDataType": "volt",
      "exhibitsTraits": [
        "means.measurement.prefix.milli"
      ]
    },
    {
      "dataTypeName": "kilovolt",
      "explanation": "unit of power, equivalent to 10E3 volts",
      "extendsDataType": "volt",
      "exhibitsTraits": [
        "means.measurement.prefix.kilo"
      ]
    },
    {
      "dataTypeName": "megavolt",
      "explanation": "unit of power, equivalent to 10E6 volts",
      "extendsDataType": "volt",
      "exhibitsTraits": [
        "means.measurement.prefix.mega"
      ]
    },
    {
      "dataTypeName": "microfarad",
      "explanation": "unit of capacitance, equivalent to 10E-6 farads",
      "extendsDataType": "farad",
      "exhibitsTraits": [
        "means.measurement.prefix.micro"
      ]
    },
    {
      "dataTypeName": "nanofarad",
      "explanation": "unit of capacitance, equivalent to 10E-9 farads",
      "extendsDataType": "farad",
      "exhibitsTraits": [
        "means.measurement.prefix.nano"
      ]
    },
    {
      "dataTypeName": "picofarad",
      "explanation": "unit of capacitance, equivalent to 10E-12 farads",
      "extendsDataType": "farad",
      "exhibitsTraits": [
        "means.measurement.prefix.pico"
      ]
    },
    {
      "dataTypeName": "kiloOhm",
      "explanation": "unit of power, equivalent to 10E3 ohms",
      "extendsDataType": "ohm",
      "exhibitsTraits": [
        "means.measurement.prefix.kilo"
      ]
    },
    {
      "dataTypeName": "megaOhm",
      "explanation": "unit of power, equivalent to 10E6 Ohms",
      "extendsDataType": "ohm",
      "exhibitsTraits": [
        "means.measurement.prefix.mega"
      ]
    },
    {
      "traitName": "means.measurement.age",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.code",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.color",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.density",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.distance",
      "extendsTrait": "means.measurement.dimension.length"
    },
    {
      "traitName": "means.measurement.distance.inches",
      "extendsTrait": "means.measurement.distance"
    },
    {
      "traitName": "means.measurement.distance.cm",
      "extendsTrait": "means.measurement.distance"
    },
    {
      "traitName": "means.measurement.sequence",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.temperature",
      "extendsTrait": "means.measurement.dimension.temperature"
    },
    {
      "traitName": "means.measurement.version",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.weight",
      "extendsTrait": "means.measurement.dimension.force"
    },
    {
      "traitName": "means.measurement.currency",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.currency.cost",
      "extendsTrait": "means.measurement.currency"
    },
    {
      "traitName": "means.measurement.currency.iSOCode",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.currency.price",
      "extendsTrait": "means.measurement.currency"
    },
    {
      "traitName": "means.measurement.currency.type",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.currency.type.destination",
      "extendsTrait": "means.measurement.currency.type"
    },
    {
      "traitName": "means.measurement.currency.type.source",
      "extendsTrait": "means.measurement.currency.type"
    },
    {
      "traitName": "means.measurement.currency.revenue",
      "extendsTrait": "means.measurement.currency"
    },
    {
      "traitName": "means.measurement.time",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.date",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.date.completion",
      "extendsTrait": "means.measurement.date"
    },
    {
      "traitName": "means.measurement.date.creation",
      "extendsTrait": "means.measurement.date"
    },
    {
      "traitName": "means.measurement.date.end",
      "extendsTrait": "means.measurement.date"
    },
    {
      "traitName": "means.measurement.date.end.scd",
      "extendsTrait": "means.measurement.date"
    },
    {
      "traitName": "means.measurement.date.modify",
      "extendsTrait": "means.measurement.date"
    },
    {
      "traitName": "means.measurement.date.occurrence",
      "extendsTrait": "means.measurement.date"
    },
    {
      "traitName": "means.measurement.date.remove",
      "extendsTrait": "means.measurement.date"
    },
    {
      "traitName": "means.measurement.date.start",
      "extendsTrait": "means.measurement.date"
    },
    {
      "traitName": "means.measurement.date.start.scd",
      "extendsTrait": "means.measurement.date"
    },
    {
      "traitName": "means.measurement.date.target",
      "extendsTrait": "means.measurement.date"
    },
    {
      "traitName": "means.measurement.duration",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.duration.seconds",
      "extendsTrait": "means.measurement.duration"
    },
    {
      "traitName": "means.measurement.duration.minutes",
      "extendsTrait": "means.measurement.duration"
    },
    {
      "traitName": "means.measurement.duration.hours",
      "extendsTrait": "means.measurement.duration"
    },
    {
      "traitName": "means.measurement.duration.days",
      "extendsTrait": "means.measurement.duration"
    },
    {
      "traitName": "means.measurement.duration.months",
      "extendsTrait": "means.measurement.duration"
    },
    {
      "traitName": "means.measurement.duration.weeks",
      "extendsTrait": "means.measurement.duration"
    },
    {
      "traitName": "means.measurement.duration.quarters",
      "extendsTrait": "means.measurement.duration"
    },
    {
      "traitName": "means.measurement.duration.trimesters",
      "extendsTrait": "means.measurement.duration"
    },
    {
      "traitName": "means.measurement.duration.years",
      "extendsTrait": "means.measurement.duration"
    },
    {
      "traitName": "means.measurement.probability",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.count",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.percent",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.percent.ownership",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.percent.voterright",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.range",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.range.high",
      "extendsTrait": "means.measurement.range"
    },
    {
      "traitName": "means.measurement.range.low",
      "extendsTrait": "means.measurement.range"
    },
    {
      "traitName": "means.measurement.rate",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.rate.type",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.size",
      "extendsTrait": "means.measurement"
    },
    {
      "traitName": "means.measurement.size.depth",
      "extendsTrait": "means.measurement.size"
    },
    {
      "traitName": "means.measurement.size.height",
      "extendsTrait": "means.measurement.size"
    },
    {
      "traitName": "means.measurement.size.volume",
      "extendsTrait": "means.measurement.size"
    },
    {
      "traitName": "means.measurement.size.width",
      "extendsTrait": "means.measurement.size"
    },
    {
      "traitName": "means.measurement.currencyCode",
      "extendsTrait": "means.measurement",
      "explanation": "indicates this value represents an ISO 4217 currency code"
    },
    {
      "dataTypeName": "currencyCode",
      "extendsDataType": "string",
      "explanation": "value is a ISO 4217 currency code",
      "exhibitsTraits": [
        "means.measurement.currencyCode"
      ]
    },
    {
      "traitName": "is.inCurrency",
      "extendsTrait": "is",
      "explanation": "the data represents an amount of the specified currency",
      "hasParameters": [
        {
          "name": "code",
          "dataType": "currencyCode",
          "required": true,
          "explanation": "ISO 4217 currency code"
        }
      ]
    },
    {
      "dataTypeName": "currency",
      "explanation": "An amount of currency, money in units specified elsewhere.",
      "extendsDataType": {
        "dataTypeReference": "decimal",
        "appliedTraits": [
          {
            "traitReference": "is.dataFormat.numeric.shaped",
            "arguments": [
              {
                "name": "precision",
                "value": "19"
              },
              {
                "name": "scale",
                "value": "4"
              }
            ]
          }
        ]
      },
      "exhibitsTraits": [
        "means.measurement.currency"
      ]
    },
    {
      "dataTypeName": "baseCurrency",
      "extendsDataType": "currency",
      "explanation": "value is expressed in the base currency units for the system",
      "exhibitsTraits": [
        "means.measurement.currency"
      ]
    },
    {
      "dataTypeName": "colorName",
      "extendsDataType": "string",
      "exhibitsTraits": [
        "means.measurement.color"
      ]
    },
    {
      "dataTypeName": "date",
      "extendsDataType": "any",
      "exhibitsTraits": [
        "is.dataFormat.date",
        "means.measurement.date"
      ]
    },
    {
      "dataTypeName": "time",
      "extendsDataType": "any",
      "exhibitsTraits": [
        "is.dataFormat.time",
        "means.measurement.time"
      ]
    },
    {
      "dataTypeName": "dateTime",
      "extendsDataType": "date",
      "exhibitsTraits": [
        "is.dataFormat.time",
        "means.measurement.time"
      ]
    },
    {
      "dataTypeName": "dateTimeOffset",
      "extendsDataType": "dateTime",
      "exhibitsTraits": [
        "is.dataFormat.timeOffset"
      ]
    },
    {
      "dataTypeName": "minutes",
      "extendsDataType": "minute"
    },
    {
      "purposeName": "createdOn",
      "extendsPurpose": "hasA",
      "exhibitsTraits": [
        "means.measurement.date.creation"
      ]
    },
    {
      "purposeName": "modifiedOn",
      "extendsPurpose": "hasA",
      "exhibitsTraits": [
        "means.measurement.date.modify"
      ]
    },
    {
      "purposeName": "removedOn",
      "extendsPurpose": "hasA",
      "exhibitsTraits": [
        "means.measurement.date.remove"
      ]
    },
    {
      "purposeName": "occuredOn",
      "extendsPurpose": "hasA",
      "exhibitsTraits": [
        "means.measurement.date.occurrence"
      ]
    },
    {
      "purposeName": "startedOn",
      "extendsPurpose": "hasA",
      "exhibitsTraits": [
        "means.measurement.date.start"
      ]
    },
    {
      "purposeName": "endedOn",
      "extendsPurpose": "hasA",
      "exhibitsTraits": [
        "means.measurement.date.end"
      ]
    },
    {
      "purposeName": "completedOn",
      "extendsPurpose": "hasA",
      "exhibitsTraits": [
        "means.measurement.date.completion"
      ]
    },
    {
      "dataTypeName": "inches",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.measurement.distance.inches"
      ]
    }
  ]
}
